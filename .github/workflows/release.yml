name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-18.04
            platform: linux-amd64
            target: x86_64-unknown-linux-musl
          - os: ubuntu-18.04
            platform: linux-arm64
            target: aarch64-unknown-linux-musl
          - os: macos-10.15
            platform: darwin-amd64
            target: x86_64-apple-darwin
          - os: windows-2016
            platform: windows-amd64
            target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install amd64 musl tools
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: sudo apt-get install -y musl-tools

      - name: Install aarch64 musl tools
        if: matrix.target == 'aarch64-unknown-linux-musl'
        run: |
          shasums_download_url="https://musl.cc/SHA512SUMS"
          tgz_download_url="https://musl.cc/aarch64-linux-musl-cross.tgz"
          tmp_dir="$(mktemp -d $RUNNER_TEMP/XXXXXXXXXX)"
          curl -fsSL "$shasums_download_url" -o "$tmp_dir/SHA512SUMS"
          curl -fsSL "$tgz_download_url" -o "$tmp_dir/aarch64-linux-musl-cross.tgz"
          cd "$tmp_dir"
          sha512sum -c SHA512SUMS 2>/dev/null | grep OK
          tar xvzf aarch64-linux-musl-cross.tgz
          echo "$tmp_dir/aarch64-linux-musl-cross/bin" >> $GITHUB_PATH

      - name: Setup rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Run release build
        run: cargo build --release --target ${{ matrix.target }}
 
      # TODO: Leverage cargo opts for stripping: https://github.com/rust-lang/rust/issues/72110

      - name: Strip linux amd64 binary
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: strip -s target/${{ matrix.target }}/release/terve

      - name: Strip linux arm64 binary
        if: matrix.target == 'aarch64-unknown-linux-musl'
        run: aarch64-linux-musl-strip -s target/${{ matrix.target }}/release/terve

      - name: Strip macos binary
        if: matrix.target == 'x86_64-apple-darwin'
        run: strip -x target/${{ matrix.target }}/release/terve

      - name: Upload release binary
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.platform }}
          path: |
            target/${{ matrix.target }}/release/terve
            target/${{ matrix.target }}/release/terve.exe
          if-no-files-found: error
          retention-days: 5

  release:
    needs: build
    runs-on: ubuntu-18.04
    steps:
      - name: Download binaries
        uses: actions/download-artifact@v2

      - name: Create SHA256SUMS file
        run: |
          mkdir release-assets
          cp linux-amd64/terve release-assets/terve_linux_amd64
          cp linux-arm64/terve release-assets/terve_linux_arm64
          cp darwin-amd64/terve release-assets/terve_darwin_amd64
          cp windows-amd64/terve.exe release-assets/terve_windows_amd64.exe
          cd release-assets
          sha256sum * > SHA256SUMS

      - name: Create release with assets
        run: gh --repo superblk/terve release create ${GITHUB_REF#refs/tags/} release-assets/*
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
